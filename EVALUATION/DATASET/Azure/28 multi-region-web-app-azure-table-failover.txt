Dataflow

    The client authenticates with Microsoft Entra ID and is granted access to web applications hosted on Azure App Service.
    Azure Front Door, a firewall and layer 7 load balancer, switches user traffic to the standby region in case of a regional outage.
    Azure App Service hosts websites and RESTful web APIs. Browser clients run AJAX applications that use the APIs.
    Web APIs delegate function apps to handle background tasks. The tasks are queued in Azure Queue Storage queues.
    The function apps hosted by Azure Functions perform the background tasks, triggered by the queued messages.
    Azure Cache for Redis caches table data for the function apps. This offloads database activity and speeds up the function apps and web apps.
    Azure Table Storage holds the data used by the web applications.
    Table Storage supports synchronous replication of data across availability zones in the region to mitigate data center outages. It also uses asynchronous replication for replicating data across different Azure regions to remediate regional outages and improve application availability.

Components

    Microsoft Entra ID is a multi-tenant identity and access management service that can synchronize with an on-premises directory.
    Azure DNS is a high-availability hosting service for DNS domains that provides apps with fast DNS queries and quick updates to DNS records. Managing Azure DNS is like managing other Azure services, and uses the same credentials, APIs, tools, and billing.
    Azure Front Door is a secure content delivery network (CDN) and load balancer with instant failover. It operates at the edge close to users, accelerating content delivery while protecting apps, APIs, and websites from cyber threats.
    Azure App Service is a fully managed service for building, deploying, and scaling web apps. You can build apps using .NET, .NET Core, Node.js, Java, Python, or PHP. Apps can run in containers or on Windows or Linux. In a mainframe migration, the front-end screens or web interface can be coded as HTTP-based REST APIs. They can be segregated and can be stateless to orchestrate a microservices-based system. For more information on web APIs, see RESTful web API design.
    Azure Functions provides an environment for running small pieces of code, called functions, without having to establish an application infrastructure. You can use it to process bulk data, integrate systems, work with IoT, and build simple APIs and microservices. With microservices, you can create servers that connect to Azure services and are always up to date.
    Azure Storage is a set of massively scalable and secure cloud services for data, apps, and workloads. It includes Azure Files, Azure Table Storage, and Azure Queue Storage. Azure Files is often an effective tool for migrating mainframe workloads.
    Azure Queue Storage provides simple, cost-effective, durable message queueing for large workloads.
    Azure Table Storage is a NoSQL key-value store for rapid development that uses massive semi-structured datasets. The tables are schemaless and adapt readily as needs change. Access is fast and cost-effective for many types of applications, and typically costs less than other types of keyed storage.
    Azure Cache for Redis is a fully managed in-memory caching service and message broker for sharing data and state among compute resources. It includes both the open-source Redis and a commercial product from Redis Labs as managed services. You can improve performance of high-throughput online transaction processing applications by designing them to scale and to make use of an in-memory data store such as Azure Cache for Redis.

